{"version":3,"file":"static/js/494.859da584.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.tsx","components/Reviews/Reviews.styled.ts","components/Reviews/Reviews.tsx","utils/reviewsMapper.ts","services/API.tsx","utils/actorsMapper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nconst Text = styled.p`\n  color: red;\n`;\n\nconst RequestError = () => {\n  return <Text>Something went wrong. Try again...</Text>;\n};\nexport default RequestError;\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  height: auto;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: 2px solid ${p => p.theme.colors.accentColor};\n`;\n\nexport const Name = styled.p`\n  padding-left: ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n\nexport const Text = styled.p`\n  padding-left: ${p => p.theme.space[3]}px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchReviewsById } from '../../services/API';\nimport RequestError from '../RequestError';\nimport { Item, Name, Text, List } from './Reviews.styled';\nimport { IReview } from '../../interfaces/AllCommonItefaces';\n\n// Хук для запиту на інфо\n//import { useFetchReviews } from 'components/hooks/useFetchReviews';\n\nconst Reviews = () => {\n  //Виклик хука\n  //const reviews = useFetchReviews();\n\n  const [reviews, setReviews] = useState<IReview[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getReviewsById(id: number) {\n      try {\n        const result = await searchReviewsById(id);\n\n        setReviews(result);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setReviews([]);\n        }\n      }\n    }\n    getReviewsById(Number(id));\n  }, [id]);\n\n  return (\n    <>\n      {error && <RequestError />}\n\n      {reviews.length > 0 && !error && (\n        <div>\n          {reviews && (\n            <List>\n              {reviews.map(({ author, content, id }) => (\n                <Item key={id}>\n                  <Name>\n                    Author: <span>{author}</span>\n                  </Name>\n                  <Text>{content}</Text>\n                </Item>\n              ))}\n            </List>\n          )}\n        </div>\n      )}\n      {reviews.length === 0 && !error && (\n        <Text>There no reviews yet...Please, try another film!</Text>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import { IReview } from '../interfaces/AllCommonItefaces';\n\nexport const reviewsMapper = (review: IReview[]): IReview[] => {\n  return review.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n};\n","import axios from 'axios';\nimport {\n  IActor,\n  IReview,\n  IMovieById,\n  IMoviesData,\n} from '../interfaces/AllCommonItefaces';\nimport { actorsMapper } from '../utils/actorsMapper';\nimport { reviewsMapper } from '../utils/reviewsMapper';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async (): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const searchMoviesByName = async (\n  search: string\n): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const searchMovieById = async (Id: number): Promise<IMovieById> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchActorsById = async (Id: number): Promise<IActor[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const actor = actorsMapper(response.data.cast);\n  return actor;\n};\n\nexport const searchReviewsById = async (Id: number): Promise<IReview[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const review = reviewsMapper(response.data.results);\n  return review;\n};\n","import { IActor } from '../interfaces/AllCommonItefaces';\nexport const actorsMapper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, character, name, profile_path }) => ({\n    id,\n    character,\n    name,\n    profile_path,\n  }));\n};\n"],"names":["Text","styled","List","p","theme","space","Item","radii","normal","colors","accentColor","Name","fontWeights","medium","useState","reviews","setReviews","error","setError","id","useParams","useEffect","searchReviewsById","result","Error","message","getReviewsById","Number","length","map","author","content","reviewsMapper","review","axios","API_KEY","SEARCH_ALL_INFO_PATH","POSTER_URL","getTrendingMovies","response","data","searchMoviesByName","search","searchMovieById","Id","searchActorsById","actors","cast","actor","character","name","profile_path","results"],"sourceRoot":""}