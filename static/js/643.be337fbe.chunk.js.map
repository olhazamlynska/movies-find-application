{"version":3,"file":"static/js/643.be337fbe.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.ts","components/Cast/Cast.tsx","components/RequestError/RequestError.tsx","components/Reviews/Reviews.styled.ts","utils/reviewsMapper.ts","services/API.tsx","utils/actorsMapper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin-top: ${p => p.theme.space[4]}px;\n`;\nexport const Item = styled.li`\n  width: 275px;\n  height: 425px;\n  border-radius: ${p => p.theme.radii.normal};\n  transition-property: box-shadow, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 1px 1px 10px 1px ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n`;\nexport const Name = styled.p`\n  padding-left: ${p => p.theme.space[3]}px; ;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActorsById, POSTER_URL } from '../../services/API';\nimport { IActor } from '../../interfaces/AllCommonItefaces';\nimport { List, Item, Poster, Name } from './Cast.styled';\nimport { Text } from '../Reviews/Reviews.styled';\nimport RequestError from '../RequestError';\nimport Loader from '../Loader';\n\nconst Cast: React.FC = () => {\n  const [actors, setActors] = useState<IActor[]>([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchActorsById(id: number) {\n      try {\n        setIsFetching(true);\n        const result = await getActorsById(id);\n        setActors(result);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setIsFetching(false);\n          setActors([]);\n        }\n      } finally {\n        setIsFetching(false);\n      }\n    }\n    fetchActorsById(Number(id));\n  }, [id]);\n\n  return (\n    <>\n      {error && <RequestError />}\n      {actors.length === 0 && (\n        <Text>There no information about actors yet...</Text>\n      )}\n      {!error && isFetching && <Loader />}\n      {actors && (\n        <List>\n          {actors.map(({ id, character, name, profile_path }) => (\n            <Item key={id}>\n              <Poster\n                src={\n                  profile_path\n                    ? POSTER_URL + profile_path\n                    : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                }\n                alt={name}\n                loading=\"lazy\"\n                width={250}\n                height={200}\n              />\n              <Name>{name}</Name>\n              <Name>{character}</Name>\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import styled from 'styled-components';\n\nconst Text = styled.p`\n  color: #fe762d;\n`;\n\nconst RequestError = () => {\n  return <Text>Something went wrong. Try again...</Text>;\n};\nexport default RequestError;\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  height: auto;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: 2px solid ${p => p.theme.colors.accentColor};\n`;\n\nexport const Name = styled.p`\n  padding-left: ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n\nexport const Text = styled.p`\n  padding-left: ${p => p.theme.space[3]}px;\n`;\n","import { IReview } from '../interfaces/AllCommonItefaces';\n\nexport const reviewsMapper = (review: IReview[]): IReview[] => {\n  return review.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n};\n","import axios from 'axios';\nimport {\n  IActor,\n  IReview,\n  IMovieById,\n  IMoviesData,\n} from '../interfaces/AllCommonItefaces';\nimport { actorsMapper } from '../utils/actorsMapper';\nimport { reviewsMapper } from '../utils/reviewsMapper';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async (): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesByName = async (search: string): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const getMovieById = async (id: number): Promise<IMovieById> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getActorsById = async (id: number): Promise<IActor[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const actor = actorsMapper(response.data.cast);\n  return actor;\n};\n\nexport const getReviewsById = async (id: number): Promise<IReview[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const review = reviewsMapper(response.data.results);\n  return review;\n};\n","import { IActor } from '../interfaces/AllCommonItefaces';\nexport const actorsMapper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, character, name, profile_path }) => ({\n    id,\n    character,\n    name,\n    profile_path,\n  }));\n};\n"],"names":["List","styled","p","theme","space","Item","radii","normal","colors","accentColor","Poster","Name","useState","actors","setActors","isFetching","setIsFetching","error","setError","id","useParams","useEffect","getActorsById","result","Error","message","fetchActorsById","Number","RequestError","length","Loader","map","character","name","profile_path","src","POSTER_URL","alt","loading","width","height","Text","fontWeights","medium","reviewsMapper","review","author","content","axios","API_KEY","SEARCH_ALL_INFO_PATH","getTrendingMovies","response","data","getMoviesByName","search","getMovieById","cast","actor","getReviewsById","results"],"sourceRoot":""}