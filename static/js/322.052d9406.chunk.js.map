{"version":3,"file":"static/js/322.052d9406.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.tsx","pages/MovieDetails/MovieDetails.styled.ts","pages/MovieDetails/MovieDetails.tsx","utils/reviewsMapper.ts","services/API.tsx","utils/actorsMapper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nconst Text = styled.p`\n  color: red;\n`;\n\nconst RequestError = () => {\n  return <Text>Something went wrong. Try again...</Text>;\n};\nexport default RequestError;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-left: ${p => p.theme.space[4]}px;\n`;\nexport const Item = styled.li`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\nexport const LinkNav = styled(Link)`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  margin-right: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.black};\n  transition-property: color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\nexport const BackBtn = styled.button`\n  font-size: ${p => p.theme.fontSizes.l};\n\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition-property: box-shadow, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 2px 2px 12px 2px ${p => p.theme.colors.accentColor};\n  }\n`;\n","//import { useFetchFilm } from 'components/hooks/useFetchDetails';\n\nimport Box from '../../components/Box';\nimport RequestError from '../../components/RequestError';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport * as API from '../../services/API';\nimport { LinkNav, BackBtn, List, Item } from './MovieDetails.styled';\nimport { IMovieById } from '../../interfaces/AllCommonItefaces';\n\nconst MovieDetails = () => {\n  // Хук для фетча деталей\n  //const film = useFetchFilm();\n  const [movie, setMovie] = useState<IMovieById | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovieById(id: number) {\n      try {\n        const result = await API.searchMovieById(id);\n        setMovie(result);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setMovie(null);\n        }\n      }\n    }\n    getMovieById(Number(id));\n  }, [id]);\n\n  return (\n    <Box as={'div'} pl={[7]}>\n      <BackBtn\n        type=\"button\"\n        onClick={() => navigate(location?.state?.from ?? '/')}\n      >\n        Go back\n      </BackBtn>\n      {!movie && error && <RequestError />}\n      {movie && (\n        <Box as={'div'}>\n          <h2>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </h2>\n          <Box as={'div'} display=\"flex\">\n            <img\n              src={\n                movie.poster_path\n                  ? API.POSTER_URL + movie.poster_path\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={movie.title}\n              loading=\"lazy\"\n              width={250}\n            />\n\n            <List>\n              <Item>\n                <h3>User score</h3>\n                <p>{movie.vote_average.toFixed(1)}</p>\n              </Item>\n              <Item>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n              </Item>\n              <Item>\n                <h3>Genres</h3>\n                <ul>\n                  {movie.genres.map(({ id, name }) => {\n                    return <li key={id}>{name}</li>;\n                  })}\n                </ul>\n              </Item>\n            </List>\n          </Box>\n          <Box as={'div'} mt={[4]}>\n            <LinkNav to=\"cast\" state={location.state}>\n              Cast\n            </LinkNav>\n            <LinkNav to=\"reviews\" state={location.state}>\n              Reviews\n            </LinkNav>\n            <Suspense fallback={null}>\n              <Outlet />\n            </Suspense>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\nexport default MovieDetails;\n","import { IReview } from '../interfaces/AllCommonItefaces';\n\nexport const reviewsMapper = (review: IReview[]): IReview[] => {\n  return review.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n};\n","import axios from 'axios';\nimport {\n  IActor,\n  IReview,\n  IMovieById,\n  IMoviesData,\n} from '../interfaces/AllCommonItefaces';\nimport { actorsMapper } from '../utils/actorsMapper';\nimport { reviewsMapper } from '../utils/reviewsMapper';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async (): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const searchMoviesByName = async (\n  search: string\n): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const searchMovieById = async (Id: number): Promise<IMovieById> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchActorsById = async (Id: number): Promise<IActor[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const actor = actorsMapper(response.data.cast);\n  return actor;\n};\n\nexport const searchReviewsById = async (Id: number): Promise<IReview[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const review = reviewsMapper(response.data.results);\n  return review;\n};\n","import { IActor } from '../interfaces/AllCommonItefaces';\nexport const actorsMapper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, character, name, profile_path }) => ({\n    id,\n    character,\n    name,\n    profile_path,\n  }));\n};\n"],"names":["Text","styled","List","p","theme","space","Item","LinkNav","Link","fontSizes","l","fontWeights","medium","colors","black","accentColor","BackBtn","borders","none","radii","normal","white","useState","movie","setMovie","error","setError","id","useParams","navigate","useNavigate","location","useLocation","useEffect","API","result","Error","message","getMovieById","Number","Box","as","pl","type","onClick","state","from","RequestError","title","Date","release_date","getFullYear","display","src","poster_path","alt","loading","width","vote_average","toFixed","overview","genres","map","name","mt","to","Suspense","fallback","reviewsMapper","review","author","content","axios","API_KEY","SEARCH_ALL_INFO_PATH","POSTER_URL","getTrendingMovies","response","data","searchMoviesByName","search","searchMovieById","Id","searchActorsById","actors","cast","actor","character","profile_path","searchReviewsById","results"],"sourceRoot":""}