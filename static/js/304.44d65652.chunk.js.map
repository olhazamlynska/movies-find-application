{"version":3,"file":"static/js/304.44d65652.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.js","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/API.js","utils/moviesMapper.js"],"sourcesContent":["const RequestError = () => {\n  return (\n    <p style={{ color: 'red' }}>Someting went wrong! Please, try again...</p>\n  );\n};\nexport default RequestError;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin-top: ${p => p.theme.space[4]}px;\n`;\n\nexport const Item = styled.li`\n  width: 275px;\n  height: 425px;\n  border-radius: ${p => p.theme.radii.normal};\n  transition-property: box-shadow, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 2px 2px 12px 2px ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n`;\n\nexport const LinkNav = styled(Link)`\n  width: 100%;\n  text-decoration: none;\n  color: inherit;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n\nexport const Name = styled.p`\n  padding-left: ${p => p.theme.space[3]}px; ;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as API from '../../services/API';\nimport { moviesMapper } from 'utils/moviesMapper';\nimport { List, Item, Poster, LinkNav, Title, Name } from './Home.styled';\nimport RequestError from 'components/RequestError/RequestError';\n\nconst Home = () => {\n  const [films, setfilms] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    async function fetchmovies() {\n      try {\n        const { results } = await API.getTrendingMovies();\n        const films = moviesMapper(results);\n\n        setfilms(films);\n      } catch (error) {\n        console.log(error.message);\n        setError(error);\n      }\n    }\n    fetchmovies();\n  }, []);\n\n  return (\n    <>\n      {error && <RequestError />}\n      <Title>Tending movies today</Title>\n      <List>\n        {films.map(({ id, posterPath, title, name }) => (\n          <Item key={id}>\n            <LinkNav to={`movies/${id}`} state={{ from: location }}>\n              <Poster\n                src={\n                  posterPath\n                    ? API.POSTER_URL + posterPath\n                    : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                }\n                alt={title}\n                loading=\"lazy\"\n                width={250}\n              />\n              <Name>{title ? title : name}</Name>\n            </LinkNav>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const searchMoviesByName = async search => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const searchMovieById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchActorsById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchReviewsById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n","export const moviesMapper = films => {\n  return films.map(\n    ({\n      id,\n      title,\n      name,\n      poster_path: posterPath,\n      release_date: releaseDate,\n    }) => ({\n      id,\n      title,\n      name,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n"],"names":["style","color","Title","styled","List","p","theme","space","Item","radii","normal","colors","accentColor","Poster","LinkNav","Link","fontSizes","m","fontWeights","medium","Name","useState","films","setfilms","error","setError","location","useLocation","useEffect","API","results","moviesMapper","console","log","message","fetchmovies","RequestError","map","id","posterPath","title","name","to","state","from","src","alt","loading","width","axios","API_KEY","SEARCH_ALL_INFO_PATH","POSTER_URL","getTrendingMovies","response","data","searchMoviesByName","search","searchMovieById","Id","searchActorsById","searchReviewsById","poster_path","releaseDate","release_date"],"sourceRoot":""}