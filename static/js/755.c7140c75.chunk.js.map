{"version":3,"file":"static/js/755.c7140c75.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.tsx","components/SearchForm/SearchForm.styled.ts","components/SearchForm/SearchForm.tsx","pages/Movies/Movies.styled.ts","pages/Movies/Movies.tsx","utils/reviewsMapper.ts","services/API.tsx","utils/actorsMapper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nconst Text = styled.p`\n  color: #fe762d;\n`;\n\nconst RequestError = () => {\n  return <Text>Something went wrong. Try again...</Text>;\n};\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  height: 30px;\n  margin-right: ${p => p.theme.space[4]}px;\n  border: 1px solid ${p => p.theme.colors.accentColor};\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: transparent;\n`;\n\nexport const SearchButton = styled.button`\n  width: 150px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.l};\n\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition-property: box-shadow, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 2px 2px 12px 2px ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { SearchButton, SearchInput } from './SearchForm.styled';\n\ninterface ISearchFormProps {\n  value: string;\n  onSubmit: (value: string) => void;\n}\nconst SearchForm: React.FC<ISearchFormProps> = ({ value, onSubmit }) => {\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const target = e.target as typeof e.target & {\n      query: { value: string };\n    };\n    const searchQuery: string = target.query.value;\n    onSubmit(searchQuery.toLowerCase().trim());\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <SearchInput type=\"text\" name=\"query\" defaultValue={value} />\n      <SearchButton type=\"submit\">Find films</SearchButton>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkNav = styled(Link)`\n  width: 100%;\n  padding: ${p => p.theme.space[3]}px;\n  color: inherit;\n  transition-property: color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { getMoviesByName } from '../../services/API';\nimport { IMovie } from '../../interfaces/AllCommonItefaces';\nimport RequestError from '../../components/RequestError';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport Loader from '../../components/Loader/Loader';\nimport { LinkNav } from './Movies.styled';\n\nconst Movies = () => {\n  const [films, setFilms] = useState<IMovie[]>([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery: string = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      setFilms([]);\n      return;\n    }\n    if (searchQuery.trim() === '' || searchQuery === '') {\n      toast.error('Enter valid search data!');\n      setFilms([]);\n      return;\n    }\n    async function getMoviesBySearchQouery(searchQuery: string) {\n      try {\n        setIsFetching(true);\n        const { results } = await getMoviesByName(searchQuery);\n        setFilms(prevFilms => [...prevFilms, ...results]);\n        setError(null);\n      } catch (error) {\n        if (error instanceof Error) {\n          setIsFetching(false);\n          setError(error.message);\n          setFilms([]);\n        }\n      } finally {\n        setIsFetching(false);\n      }\n    }\n    getMoviesBySearchQouery(searchQuery);\n  }, [searchQuery]);\n\n  const handleSubmit = (value: string) => {\n    if (value.toLowerCase().trim() === '') {\n      toast.error('Enter search data');\n      return;\n    }\n    if (value.toLowerCase().trim() === searchQuery) {\n      toast.error('You have the same request. Enter new...');\n      return;\n    }\n    if (value.toLowerCase().trim() !== searchQuery) {\n      setFilms([]);\n      setSearchParams(value !== '' ? { query: value } : {});\n    }\n  };\n  return (\n    <>\n      {error && <RequestError />}\n      {!error && isFetching && <Loader />}\n      <SearchForm value={searchQuery} onSubmit={handleSubmit} />\n      {films.length !== 0 && (\n        <ul>\n          {films.map(({ id, title }) => (\n            <li key={id}>\n              <LinkNav to={`${id}`} state={{ from: location }}>\n                {title}\n              </LinkNav>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import { IReview } from '../interfaces/AllCommonItefaces';\n\nexport const reviewsMapper = (review: IReview[]): IReview[] => {\n  return review.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n};\n","import axios from 'axios';\nimport {\n  IActor,\n  IReview,\n  IMovieById,\n  IMoviesData,\n} from '../interfaces/AllCommonItefaces';\nimport { actorsMapper } from '../utils/actorsMapper';\nimport { reviewsMapper } from '../utils/reviewsMapper';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async (): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesByName = async (search: string): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const getMovieById = async (id: number): Promise<IMovieById> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getActorsById = async (id: number): Promise<IActor[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const actor = actorsMapper(response.data.cast);\n  return actor;\n};\n\nexport const getReviewsById = async (id: number): Promise<IReview[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const review = reviewsMapper(response.data.results);\n  return review;\n};\n","import { IActor } from '../interfaces/AllCommonItefaces';\nexport const actorsMapper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, character, name, profile_path }) => ({\n    id,\n    character,\n    name,\n    profile_path,\n  }));\n};\n"],"names":["Text","styled","SearchInput","p","theme","space","colors","accentColor","radii","normal","SearchButton","fontSizes","l","borders","none","white","value","onSubmit","e","preventDefault","searchQuery","target","query","toLowerCase","trim","type","name","defaultValue","LinkNav","Link","useState","films","setFilms","isFetching","setIsFetching","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","toast","getMoviesBySearchQouery","getMoviesByName","results","prevFilms","Error","message","RequestError","Loader","length","map","id","title","to","state","from","reviewsMapper","review","author","content","axios","API_KEY","SEARCH_ALL_INFO_PATH","POSTER_URL","getTrendingMovies","response","data","search","getMovieById","getActorsById","actors","cast","actor","character","profile_path","getReviewsById"],"sourceRoot":""}