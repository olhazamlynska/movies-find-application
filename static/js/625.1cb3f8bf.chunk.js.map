{"version":3,"file":"static/js/625.1cb3f8bf.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.tsx","pages/Movies/Movies.styled.ts","pages/Movies/Movies.tsx","utils/reviewsMapper.ts","services/API.tsx","utils/actorsMapper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nconst Text = styled.p`\n  color: red;\n`;\n\nconst RequestError = () => {\n  return <Text>Something went wrong. Try again...</Text>;\n};\nexport default RequestError;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Input = styled.input`\n  height: 30px;\n  margin-right: ${p => p.theme.space[4]}px;\n  border: 1px solid ${p => p.theme.colors.accentColor};\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: transparent;\n`;\n\nexport const Btn = styled.button`\n  width: 150px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.l};\n\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition-property: box-shadow, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 2px 2px 12px 2px ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const LinkNav = styled(Link)`\n  width: 100%;\n  padding: ${p => p.theme.space[3]}px;\n  color: inherit;\n  transition-property: color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../../services/API';\n\nimport { Btn, Input, LinkNav } from './Movies.styled';\nimport Box from '../../components/Box/';\nimport RequestError from '../../components/RequestError';\nimport { IMovie } from '../../interfaces/AllCommonItefaces';\n\nconst Movies = () => {\n  const [films, setFilms] = useState<IMovie[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery: string = searchParams.get('query') ?? '';\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const target = e.target as typeof e.target & {\n      query: { value: string };\n    };\n    const searchQuery = target.query.value;\n    setSearchParams(searchQuery);\n\n    if (searchQuery.trim() === '' || searchQuery === null) {\n      setFilms([]);\n      return;\n    }\n  };\n  useEffect(() => {\n    if (searchQuery.trim() === '' || searchQuery === null) {\n      setFilms([]);\n      return;\n    }\n    async function getMoviesByName(searchQuery: string) {\n      try {\n        const { results } = await API.searchMoviesByName(searchQuery);\n        setFilms(results);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setFilms([]);\n        }\n      }\n    }\n    getMoviesByName(searchQuery);\n  }, [searchQuery]);\n\n  return (\n    <Box as={'div'} pl={[7]}>\n      {error && <RequestError />}\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <Btn type=\"submit\">Find films</Btn>\n      </form>\n\n      {films.length !== 0 && (\n        <>\n          <ul>\n            {films.map(({ id, title }) => (\n              <li key={id}>\n                <LinkNav to={`${id}`} state={{ from: location }}>\n                  {title}\n                </LinkNav>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import { IReview } from '../interfaces/AllCommonItefaces';\n\nexport const reviewsMapper = (review: IReview[]): IReview[] => {\n  return review.map(({ author, content, id }) => ({\n    author,\n    content,\n    id,\n  }));\n};\n","import axios from 'axios';\nimport {\n  IActor,\n  IReview,\n  IMovieById,\n  IMoviesData,\n} from '../interfaces/AllCommonItefaces';\nimport { actorsMapper } from '../utils/actorsMapper';\nimport { reviewsMapper } from '../utils/reviewsMapper';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async (): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const searchMoviesByName = async (\n  search: string\n): Promise<IMoviesData> => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const searchMovieById = async (Id: number): Promise<IMovieById> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchActorsById = async (Id: number): Promise<IActor[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const actor = actorsMapper(response.data.cast);\n  return actor;\n};\n\nexport const searchReviewsById = async (Id: number): Promise<IReview[]> => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const review = reviewsMapper(response.data.results);\n  return review;\n};\n","import { IActor } from '../interfaces/AllCommonItefaces';\nexport const actorsMapper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, character, name, profile_path }) => ({\n    id,\n    character,\n    name,\n    profile_path,\n  }));\n};\n"],"names":["Text","styled","Input","p","theme","space","colors","accentColor","radii","normal","Btn","fontSizes","l","borders","none","white","LinkNav","Link","useState","films","setFilms","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","API","results","Error","message","trim","getMoviesByName","Box","as","pl","RequestError","onSubmit","e","preventDefault","target","query","value","type","name","length","map","id","title","to","state","from","reviewsMapper","review","author","content","axios","API_KEY","SEARCH_ALL_INFO_PATH","POSTER_URL","getTrendingMovies","response","data","searchMoviesByName","search","searchMovieById","Id","searchActorsById","actors","cast","actor","character","profile_path","searchReviewsById"],"sourceRoot":""}