{"version":3,"file":"static/js/310.e0f7fa4a.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/API.js","utils/moviesMapper.js"],"sourcesContent":["const RequestError = () => {\n  return (\n    <p style={{ color: 'red' }}>Someting went wrong! Please, try again...</p>\n  );\n};\nexport default RequestError;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Input = styled.input`\n  height: 30px;\n  margin-right: ${p => p.theme.space[4]}px;\n  border: 1px solid ${p => p.theme.colors.accentColor};\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: transparent;\n`;\n\nexport const Btn = styled.button`\n  width: 150px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.l};\n\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition-property: box-shadow, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 2px 2px 12px 2px ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const LinkNav = styled(Link)`\n  width: 100%;\n  padding: ${p => p.theme.space[3]}px;\n  color: inherit;\n  transition-property: color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../../services/API';\nimport { moviesMapper } from 'utils/moviesMapper';\nimport { Btn, Input, LinkNav } from './Movies.styled';\nimport { Box } from 'components/Box/Box';\nimport RequestError from 'components/RequestError/RequestError';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.query.value });\n\n    if (searchQuery.trim('') === '' || searchQuery === null) {\n      setFilms([]);\n      return;\n    }\n\n    e.target.reset();\n  };\n  useEffect(() => {\n    if (searchQuery.trim('') === '' || searchQuery === null) {\n      setFilms([]);\n      return;\n    }\n    API.searchMoviesByName(searchQuery)\n      .then(({ results }) => {\n        const films = moviesMapper(results);\n        setFilms(films);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setError(error);\n        setFilms([]);\n      });\n  }, [searchQuery]);\n\n  return (\n    <Box as={'div'} pl={[7]}>\n      {error && <RequestError />}\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <Btn type=\"submit\">Find films</Btn>\n      </form>\n\n      {films.length !== 0 && (\n        <>\n          <ul>\n            {films.map(({ id, title }) => (\n              <li key={id}>\n                <LinkNav to={`${id}`} state={{ from: location }}>\n                  {title}\n                </LinkNav>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const searchMoviesByName = async search => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const searchMovieById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchActorsById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchReviewsById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n","export const moviesMapper = films => {\n  return films.map(\n    ({\n      id,\n      title,\n      name,\n      poster_path: posterPath,\n      release_date: releaseDate,\n    }) => ({\n      id,\n      title,\n      name,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n"],"names":["style","color","Input","styled","p","theme","space","colors","accentColor","radii","normal","Btn","fontSizes","l","borders","none","white","LinkNav","Link","useState","films","setFilms","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","trim","API","then","results","moviesMapper","catch","console","log","message","Box","as","pl","RequestError","onSubmit","e","preventDefault","query","target","elements","value","reset","type","name","length","map","id","title","to","state","from","axios","API_KEY","SEARCH_ALL_INFO_PATH","POSTER_URL","getTrendingMovies","response","data","searchMoviesByName","search","searchMovieById","Id","searchActorsById","searchReviewsById","posterPath","poster_path","releaseDate","release_date"],"sourceRoot":""}